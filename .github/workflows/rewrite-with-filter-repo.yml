name: Rewrite commit authors (safe env-filter)

on:
  workflow_dispatch:
    inputs:
      do_rewrite:
        description: 'Set to "yes" to perform the rewrite and force-push. Default "no" (dry-run).'
        required: true
        default: "no"

permissions:
  contents: write

jobs:
  rewrite:
    runs-on: ubuntu-latest
    timeout-minutes: 90
    steps:
      - name: Checkout full repo (all history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create backup branch (safe)
        id: backup
        run: |
          ts=$(date -u +"%Y%m%dT%H%M%SZ")
          backup="pre-rewrite-backup-$ts"
          git checkout -b "$backup"
          git push origin "$backup"
          echo "backup_branch=$backup" >> $GITHUB_OUTPUT
          echo "Created backup branch: $backup"

      - name: Dry-run: show candidate bot commits (sample)
        run: |
          echo "Showing commits that likely use bot identities (sample):"
          git log --all --pretty=format:"%h | %an | %ae | %cn | %ce | %ad | %s" \
            | grep -Ei 'github-actions|users.noreply' || true
          echo
          echo "If you see matches above, those are candidates to be re-attributed."
      - name: Prepare env-filter script
        run: |
          cat > env-filter.sh <<'ENV'
#!/bin/sh
# If author/committer contains github-actions or users.noreply, replace with NEW_NAME/NEW_EMAIL
case "$(printf '%s' "$GIT_AUTHOR_NAME:$GIT_AUTHOR_EMAIL:$GIT_COMMITTER_NAME:$GIT_COMMITTER_EMAIL")" in
  *github-actions*|*users.noreply.github.com*)
    export GIT_AUTHOR_NAME="$NEW_NAME"
    export GIT_AUTHOR_EMAIL="$NEW_EMAIL"
    export GIT_COMMITTER_NAME="$NEW_NAME"
    export GIT_COMMITTER_EMAIL="$NEW_EMAIL"
    ;;
esac
ENV
          chmod +x env-filter.sh
          echo "env-filter.sh prepared."

      - name: Perform rewrite (only if do_rewrite == yes)
        if: ${{ github.event.inputs.do_rewrite == 'yes' }}
        env:
          NEW_NAME: ${{ github.actor }}
          NEW_EMAIL: ${{ secrets.MY_GH_EMAIL }}
        run: |
          set -e
          echo "Starting history rewrite: replacing bot identities with $NEW_NAME <$NEW_EMAIL>"
          git fetch --all
          git filter-branch --env-filter 'sh env-filter.sh' -- --all
          echo "Rewrite finished. Force-pushing rewritten branches and tags to origin..."
          git push --force --tags origin 'refs/heads/*'
          echo "Force-push done."

      - name: Dry-run notice (when not rewriting)
        if: ${{ github.event.inputs.do_rewrite != 'yes' }}
        run: |
          echo "Dry-run complete. No rewrite performed. Re-run this workflow with do_rewrite = yes to apply changes."

      - name: Show last 30 commits (verification)
        run: |
          echo "Last 30 commits (newest first):"
          git --no-pager log -n 30 --pretty=format:"%h | %an <%ae> | %ad | %s"

